<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwill.gaebokchi.repository.PostDao">
	<!-- 메인포스트 작성 인설트 쿼리 -->
	<!-- <insert id="insertMainPost" parameterType="com.itwill.gaebokchi.dto.MainPostCreateDto"> 
		INSERT INTO POSTS (title, club_type, media, content, author, category <trim 
		prefix="," suffixOverrides=","> <if test="height != null"> height</if> <if 
		test="career != null"> career</if> <if test="handy != null"> handy</if> <if 
		test="ironDistance != null"> irondistance</if> <if test="driverDistance != 
		null"> driverdistance</if> </trim> ) VALUES (#{title}, #{clubType}, #{media}, 
		#{content}, #{author}, 'P001' <trim prefix="," suffixOverrides=","> <if test="height 
		!= null"> #{height}</if> <if test="career != null"> #{career}</if> <if test="handy 
		!= null"> #{handy}</if> <if test="ironDistance != null"> #{ironDistance}</if> 
		<if test="driverDistance != null"> #{driverDistance}</if> </trim> ) </insert> -->
	<insert id="insertMainPost"
		parameterType="com.itwill.gaebokchi.dto.MainPostCreateDto">
		INSERT INTO POSTS (
		title, club_type, media, content, author, category
		<trim>
			<if test="height != null">,height</if>
			<if test="career != null">,career</if>
			<if test="handy != null">,handy</if>
			<if test="ironDistance != null">,ironDistance</if>
			<if test="driverDistance != null">,driverDistance</if>
		</trim>
		)
		VALUES (
		#{title}, #{clubType}, #{media}, #{content}, #{author},
		'P001'
		<trim>
			<if test="height != null">,#{height}</if>
			<if test="career != null">,#{career}</if>
			<if test="handy != null">,#{handy}</if>
			<if test="ironDistance != null">,#{ironDistance}</if>
			<if test="driverDistance != null">,#{driverDistance}</if>
		</trim>
		)
	</insert>

	<update id="updateMainPost">
		UPDATE posts SET title = #{title}, content =
		#{content} , modified_Time =
		systimestamp, media = #{media} WHERE ID =
		#{id}
	</update>














	<!-- <insert id="insertMainPost"> INSERT INTO POSTS (title, club_type, media, 
		content, author, category, height, career, handy, irondistance, driverdistance) 
		values (#{title}, #{clubType}, 'test', #{content}, #{author}, 'P001', #{height}, 
		#{career}, #{handy}, #{ironDistance}, #{driverDistance}) </insert> -->







	<select id="selectByClubType" resultType="Clubs">
		SELECT * FROM clubs
	</select>
	<select id="selectReadAll" resultType="Post">
		SELECT
		a.id,
		b.name as
		clubType,
		a.title,
		c.nickname as author,
		a.views,
		a.likes,
		a.created_time,
		CASE WHEN EXISTS (SELECT 1 FROM comments d WHERE d.post_id = a.id AND
		d.selection = 1)
		THEN '해결 완료'
		ELSE '해결 중'
		END AS selection
		FROM
		posts a
		JOIN
		clubs b ON a.club_type = b.id
		JOIN users c ON a.author = c.userid
		ORDER
		BY
		a.id
	</select>
	<select id="selectByPostId" resultType="Post">
		SELECT a.id, b.name as
		clubType, a.title, c.nickname as author, a.views, a.likes,
		a.created_time, a.content, a.media, a.height, a.career, a.handy,
		a.ironDistance, a.driverDistance,
		CASE WHEN EXISTS (SELECT 1 FROM
		comments d WHERE
		d.post_id = a.id AND
		d.selection = 1) THEN '채택됨' ELSE
		'미채택'
		END AS
		selection FROM posts a
		JOIN clubs b ON a.club_type = b.id
		JOIN users c
		ON a.author = c.userid
		WHERE a.id = #{id}
	</select>

	<delete id="selectDeleteById">
		DELETE FROM posts WHERE ID = #{id}
	</delete>

	<update id="updatePostView">
		UPDATE posts SET views = views + 1 where ID = #{id}
	</update>

	<update id="updatePostLikes">
		UPDATE posts SET likes = likes + 1 where ID = #{id}
	</update>

	<select id="selectLikes" parameterType="int" resultType="int">
		SELECT
		likes FROM posts WHERE id = #{id}
	</select>


	<!-- 검색 매퍼 -->
	<select id="search" resultType="Post">
		<!-- textSearchSelect 값을 사용하여 검색어 바인딩 -->
		<bind name="searchKeyword" value="'%' + textSearchSelect + '%'" />

		SELECT * FROM posts
		<where>
			<choose>
				<when test='searchCategory.equals("searchClubs")'>
					<choose>
						<when test='clubSelect == "WG"'>
							AND WHERE club_type = 'WG'
						</when>
						<when test='clubSelect == "PT"'>
							AND WHERE club_type = 'PT'
						</when>
						<when test='clubSelect == "UT"'>
							AND WHERE club_type = 'UT'
						</when>
						<when test='clubSelect == "WD"'>
							AND WHERE club_type = 'WD'
						</when>
						<when test='clubSelect == "DR"'>
							AND WHERE club_type = 'DR'
						</when>
						<when test='clubSelect == "IR"'>
							AND WHERE club_type = 'IR'
						</when>
					</choose>
				</when>
				<when test='searchCategory.equals("searchSelection")'>
					<choose>
						<when test='selectSelection == "selectTrue"'>
							AND id IN (SELECT post_id FROM comments WHERE selection = 1)
						</when>
						<when test='selectSelection == "selectFalse"'>
							AND id NOT IN (SELECT post_id FROM comments WHERE selection = 1)
						</when>
					</choose>
				</when>
				<when test='searchCategory.equals("searchTitle")'>
					AND upper(title) like upper(#{searchKeyword})
				</when>
				<when test='searchCategory.equals("searchContent")'>
					AND upper(content) like upper(#{searchKeyword})
				</when>
				<when test='searchCategory.equals("searchTitleContent")'>
					AND (upper(title) like upper(#{searchKeyword})
					OR upper(content) like upper(#{searchKeyword}))
				</when>
				<when test='searchCategory.equals("searchAuthor")'>
					AND upper(author) like upper(#{searchKeyword})
				</when>
			</choose>
		</where>
		ORDER BY ID DESC
	</select>

</mapper>
