<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwill.gaebokchi.repository.PostDao">
    <!-- 메인포스트 작성 인설트 쿼리 -->
    <!-- <insert id="insertMainPost" parameterType="com.itwill.gaebokchi.dto.MainPostCreateDto"> 
        INSERT INTO POSTS (title, club_type, media, content, author, category <trim 
        prefix="," suffixOverrides=","> <if test="height != null"> height</if> <if 
        test="career != null"> career</if> <if test="handy != null"> handy</if> <if 
        test="ironDistance != null"> irondistance</if> <if test="driverDistance != 
        null"> driverdistance</if> </trim> ) VALUES (#{title}, #{clubType}, #{media}, 
        #{content}, #{author}, 'P001' <trim prefix="," suffixOverrides=","> <if test="height 
        != null"> #{height}</if> <if test="career != null"> #{career}</if> <if test="handy 
        != null"> #{handy}</if> <if test="ironDistance != null"> #{ironDistance}</if> 
        <if test="driverDistance != null"> #{driverDistance}</if> </trim> ) </insert> -->
    <insert id="insertMainPost"
        parameterType="com.itwill.gaebokchi.dto.MainPostCreateDto">
        INSERT INTO POSTS (
        title, club_type, media, content, author, category
        <trim>
            <if test="height != null">,height</if>
            <if test="career != null">,career</if>
            <if test="handy != null">,handy</if>
            <if test="ironDistance != null">,ironDistance</if>
            <if test="driverDistance != null">,driverDistance</if>
        </trim>
        )
        VALUES (
        #{title}, #{clubType}, #{media}, #{content}, #{author},
        'P001'
        <trim>
            <if test="height != null">,#{height}</if>
            <if test="career != null">,#{career}</if>
            <if test="handy != null">,#{handy}</if>
            <if test="ironDistance != null">,#{ironDistance}</if>
            <if test="driverDistance != null">,#{driverDistance}</if>
        </trim>
        )
    </insert>

    <!-- 수정 쿼리 -->
    <update id="updateMainPost"
        parameterType="com.itwill.gaebokchi.dto.MainPostUpdateDto">
        UPDATE posts
        <set>
            <if test="title != null and title != ''"> title = #{title}, </if>
            <if test="clubType != null and clubType != ''"> club_type = #{clubType}, </if>
            <if test="content != null and content != ''"> content = #{content}, </if>
            modified_Time = systimestamp,
            <if test="height != null"> height = #{height}, </if>
            <if test="career != null"> career = #{career}, </if>
            <if test="handy != null"> handy = #{handy}, </if>
            <if test="ironDistance != null"> irondistance = #{ironDistance}, </if>
            <if test="driverDistance != null"> driverdistance = #{driverDistance}, </if>
            <if test="mediaPath != null and mediaPath != ''"> media = #{mediaPath} </if>
        </set>
        WHERE id = #{id}
    </update>








    <!-- <insert id="insertMainPost"> INSERT INTO POSTS (title, club_type, 
        media, content, author, category, height, career, handy, irondistance, driverdistance) 
        values (#{title}, #{clubType}, 'test', #{content}, #{author}, 'P001', #{height}, 
        #{career}, #{handy}, #{ironDistance}, #{driverDistance}) </insert> -->







    <select id="selectByClubType" resultType="Clubs">
        SELECT * FROM clubs
    </select>
    <select id="selectReadAll" resultType="Post">
        SELECT
        a.id,
        b.name as
        clubType,
        a.title,
        c.nickname as author,
        a.views,
        a.likes,
        a.created_time,
        CASE WHEN EXISTS (SELECT 1 FROM comments d WHERE d.post_id = a.id AND
        d.selection = 1)
        THEN '해결 완료'
        ELSE '해결 중'
        END AS selection
        FROM
        posts a
        JOIN
        clubs b ON a.club_type = b.id
        JOIN users c ON a.author = c.userid
        where category = 'P001'
        ORDER
        BY
        a.id
    </select>

    <select id="selectReadAllByUserid" resultType="Post">
        SELECT
        a.id,
        b.name
        as
        clubType,
        a.title,
        c.nickname as author,
        a.views,
        a.likes,
        a.created_time,
        CASE WHEN EXISTS (
        SELECT 1
        FROM comments d
        WHERE
        d.post_id = a.id
        AND d.selection = 1
        )
        THEN '해결 완료'
        ELSE '해결 중'
        END AS
        selection
        FROM
        posts a
        JOIN clubs b ON a.club_type = b.id
        JOIN users c ON
        a.author = c.userid
        WHERE c.userid = #{userid}
        ORDER BY a.id
    </select>

    <select id="selectByPostId" resultType="Post">
        SELECT
        a.id,
        b.name as
        clubType,
        a.title,
        c.nickname,
        a.views,
        a.likes,
        a.created_time,
        a.modified_time,
        a.content,
        a.media,
        a.height,
        a.career,
        a.handy,
        a.ironDistance,
        a.driverDistance,
        a.author,
        CASE WHEN EXISTS (
        SELECT 1
        FROM comments d
        WHERE d.post_id =
        a.id
        AND d.selection = 1
        )
        THEN '채택됨'
        ELSE '미채택'
        END AS selection
        FROM posts
        a JOIN clubs b
        ON a.club_type =
        b.id
        JOIN users c
        ON a.author = c.userid
        WHERE a.id =
        #{id}
    </select>

    <delete id="selectDeleteById">
        DELETE FROM posts WHERE ID = #{id}
    </delete>

    <update id="updatePostView">
        UPDATE posts SET views = views + 1 where ID = #{id}
    </update>

    <update id="updatePostLikes">
        UPDATE posts SET likes = likes + 1 where ID = #{id}
    </update>

    <select id="selectLikes" resultType="int">
        SELECT
        likes FROM posts WHERE
        id = #{id}
    </select>


    <!-- 검색 매퍼 -->
    <select id="search"
        parameterType="com.itwill.gaebokchi.dto.MainPostSearchDto"
        resultType="Post">
        <!-- textSearchSelect 값을 사용하여 검색어 바인딩 -->
        <bind name="searchKeyword"
            value="'%' + textSearchSelect + '%'" />

        SELECT
        a.id,
        b.name AS clubType,
        a.title,
        c.nickname AS author,
        a.views,
        a.likes,
        a.created_time,
        CASE
        WHEN EXISTS (SELECT 1 FROM comments d WHERE
        d.post_id = a.id AND
        d.selection = 1)
        THEN '해결 완료'
        ELSE '해결 중'
        END AS
        selection
        FROM
        posts a
        JOIN
        clubs b ON a.club_type = b.id
        JOIN
        users c ON
        a.author = c.userid
        <where>
            <choose>
                <when test='searchCategory.equals("searchClubs")'>
                    <choose>
                        <when test='clubSelect == "WG"'>
                            AND a.club_type = 'WG'
                        </when>
                        <when test='clubSelect == "PT"'>
                            AND a.club_type = 'PT'
                        </when>
                        <when test='clubSelect == "UT"'>
                            AND a.club_type = 'UT'
                        </when>
                        <when test='clubSelect == "WD"'>
                            AND a.club_type = 'WD'
                        </when>
                        <when test='clubSelect == "DR"'>
                            AND a.club_type = 'DR'
                        </when>
                        <when test='clubSelect == "IR"'>
                            AND a.club_type = 'IR'
                        </when>
                    </choose>
                </when>
                <when
                    test='searchCategory.equals("searchSelection")'>
                    <choose>
                        <when
                            test='selectSelection == "selectTrue"'>
                            AND EXISTS (SELECT 1 FROM comments d WHERE
                            d.post_id = a.id AND
                            d.selection = 1)
                        </when>
                        <when
                            test='selectSelection == "selectFalse"'>
                            AND NOT EXISTS (SELECT 1 FROM comments d WHERE
                            d.post_id = a.id AND
                            d.selection = 1)
                        </when>
                    </choose>
                </when>
                <when test='searchCategory.equals("searchTitle")'>
                    AND upper(a.title) like upper(#{searchKeyword})
                </when>
                <when test='searchCategory.equals("searchContent")'>
                    AND upper(a.content) like upper(#{searchKeyword})
                </when>
                <when
                    test='searchCategory.equals("searchTitleContent")'>
                    AND (upper(a.title) like upper(#{searchKeyword}) OR
                    upper(a.content)
                    like upper(#{searchKeyword}))
                </when>
                <when test='searchCategory.equals("searchAuthor")'>
                    AND upper(c.nickname) like upper(#{searchKeyword})
                </when>
            </choose>
        </where>
        ORDER BY a.id DESC
    </select>

    <!-- 내 게시글 검색 매퍼 -->
    <select id="searchMyPost"
        parameterType="com.itwill.gaebokchi.dto.MyPostSearchDto"
        resultType="Post">
        <!-- textSearchSelect 값을 사용하여 검색어 바인딩 -->
        <bind name="searchKeyword"
            value="'%' + textSearchSelect + '%'" />

        SELECT
        a.id,
        b.name AS clubType,
        a.title,
        c.nickname AS author,
        a.views,
        a.likes,
        a.created_time,
        CASE
        WHEN EXISTS (SELECT 1 FROM comments d WHERE
        d.post_id = a.id AND
        d.selection = 1)
        THEN '해결 완료'
        ELSE '해결 중'
        END AS
        selection
        FROM
        posts a
        JOIN
        clubs b ON a.club_type = b.id
        JOIN
        users c ON
        a.author = c.userid
        <where>
            <choose>
                <when test='searchCategory.equals("searchClubs")'>
                    <choose>
                        <when test='clubSelect == "WG"'>
                            AND a.club_type = 'WG'
                        </when>
                        <when test='clubSelect == "PT"'>
                            AND a.club_type = 'PT'
                        </when>
                        <when test='clubSelect == "UT"'>
                            AND a.club_type = 'UT'
                        </when>
                        <when test='clubSelect == "WD"'>
                            AND a.club_type = 'WD'
                        </when>
                        <when test='clubSelect == "DR"'>
                            AND a.club_type = 'DR'
                        </when>
                        <when test='clubSelect == "IR"'>
                            AND a.club_type = 'IR'
                        </when>
                    </choose>
                </when>
                <when
                    test='searchCategory.equals("searchSelection")'>
                    <choose>
                        <when
                            test='selectSelection == "selectTrue"'>
                            AND EXISTS (SELECT 1 FROM comments d WHERE
                            d.post_id = a.id AND
                            d.selection = 1)
                        </when>
                        <when
                            test='selectSelection == "selectFalse"'>
                            AND NOT EXISTS (SELECT 1 FROM comments d WHERE
                            d.post_id = a.id AND
                            d.selection = 1)
                        </when>
                    </choose>
                </when>
                <when test='searchCategory.equals("searchTitle")'>
                    AND upper(a.title) like upper(#{searchKeyword})
                </when>
                <when test='searchCategory.equals("searchContent")'>
                    AND upper(a.content) like upper(#{searchKeyword})
                </when>
                <when
                    test='searchCategory.equals("searchTitleContent")'>
                    AND (upper(a.title) like upper(#{searchKeyword}) OR
                    upper(a.content)
                    like upper(#{searchKeyword}))
                </when>
                <when test='searchCategory.equals("searchAuthor")'>
                    AND upper(c.nickname) like upper(#{searchKeyword})
                </when>
            </choose>
            AND a.author = #{userid}
        </where>
        ORDER BY a.id DESC
    </select>





    <select id="getPostList"
        resultType="com.itwill.gaebokchi.repository.Post">
        SELECT *
        FROM (
        SELECT
        A.*,
        ROWNUM AS rnum
        FROM (
        SELECT
        p.id AS
        id,
        c.name AS clubType,
        p.title AS title,
        u.nickname AS author,
        p.views AS
        views,
        p.likes AS likes,
        p.created_time AS createdTime,
        CASE
        WHEN EXISTS (
        SELECT 1 FROM comments cmt WHERE cmt.post_id = p.id AND cmt.selection
        = '1'
        )
        THEN '해결 완료'
        ELSE '해결 중'
        END AS selection
        FROM
        posts p
        JOIN clubs c
        ON p.club_type = c.id
        JOIN users u ON p.author = u.userid
        WHERE
        p.category IN ('P001')
        ORDER BY
        p.id DESC
        ) A
        WHERE
        ROWNUM &lt;= #{endRow}
        )
        WHERE
        rnum &gt; #{startRow}
    </select>


    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM posts
        where category = 'P001'
    </select>


    <select id="getPostListByUserid"
        resultType="com.itwill.gaebokchi.repository.Post">
        SELECT *
        FROM (
        SELECT
        A.*,
        ROWNUM AS rnum
        FROM (
        SELECT
        p.id AS
        id,
        c.name AS clubType,
        p.title AS title,
        u.nickname AS author,
        p.views AS
        views,
        p.likes AS likes,
        p.created_time AS createdTime,
        CASE
        WHEN EXISTS (
        SELECT 1 FROM comments cmt WHERE cmt.post_id = p.id AND cmt.selection
        = '1'
        )
        THEN '해결 완료'
        ELSE '해결 중'
        END AS selection
        FROM
        posts p
        JOIN clubs c
        ON p.club_type = c.id
        JOIN users u ON p.author = u.userid
        WHERE
        p.author
        = #{author} AND p.category IN ('P001')
        ORDER BY
        p.id DESC
        ) A
        WHERE
        ROWNUM
        &lt;= #{endRow}
        )
        WHERE
        rnum &gt; #{startRow}
    </select>

    <select id="getTotalCountByUserid" resultType="int">
      SELECT COUNT(*)
      FROM posts
      where author = #{author} and category = 'P001'
   </select>

    <select id="getUsersLikesRank" resultType="Post">
        SELECT *
        FROM posts
        WHERE category = 'P001'
        ORDER BY likes DESC
        FETCH FIRST 15 ROWS ONLY
    </select>
</mapper>