<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwill.gaebokchi.repository.UserDao">
    <!-- 일반,전문가 회원가입 -->
    <insert id="insertNormalUser">
        INSERT INTO users (userid, password, name,
        nickname, phone, email, birth,
        gender, address)
        VALUES (
        #{userid},
        #{password},
        #{name},
        #{nickname},
        #{phone},
        #{email},
        #{birth},
        #{gender},
        #{address}
        )
    </insert>

    <insert id="insertExpertUser">

        INSERT INTO users (userid, password, name,
        nickname, phone, email, birth,
        gender, address, account, accept)
        VALUES (
        #{userid},
        #{password},
        #{name},
        #{nickname},
        #{phone},
        #{email},
        #{birth},
        #{gender},
        #{address},
        #{account},
        #{accept}
        )

    </insert>
    <!-- 아이디, 닉네임 중복체크 버튼 -->
    <select id="selectByUserid">
        select * from users where userid = #{userid}
    </select>

    <select id="selectByNickname">
        select * from users where nickname = #{nickname}
    </select>

    <select id="selectByEmail">
        select * from users where email = #{email}
    </select>
    
    <select id="selectByPhone">
        select * from users where phone = #{phone}
    </select>
    
    <select id="selectByAccept">
        select * from users where license = #{accept} or accept = #{accept}
    </select>

    <select id="selectByUseridAndPassword" resultType="User">
        select *
        from users
        where userid = #{userid} and password = #{password}
    </select>
    <select id="FindUserid">
        select * from users where name = #{name} and email
        = #{email}
    </select>

    <select id="FindPassword">
        select * from users where userid = #{userid} and
        email = #{email} and phone = #{phone}
    </select>
    
    <select id="FindNicknameByUserId">
    	select nickname from users where userid = #{userid}
    </select>

    <update id="UpdatePassword">
        update users set password = #{password} where
        userid = #{userid} and email = #{email} and phone = #{phone}
    </update>
    <update id="UpdatePoint">
        update users set withdraw = nvl(withdraw, 0) + #{withdraw} where
        userid = #{userid} and password = #{password}
    </update>

    <select id="AdminSignup">
        select * from users where accept is not null
    </select>
    
    <update id="deleteAccept">
        update users set accept = null where userid = #{userid}
    </update>
    
    <update id="updateGrade">
        update users set grade = 'G10' where userid = #{userid}
    </update>
    
    <insert id="intoPros">
        INSERT INTO pros (id) VALUES (#{accept})
    </insert>
    
    <update id="intoLicense">
        update users set license = #{accept} where userid = #{userid}
    </update>
    
    <select id="AdminExchange">
        select * from users where withdraw is not null AND withdraw != 0
    </select>
    
    <update id="setPoint">
        update users set point = point - #{withdraw} where userid = #{userid}
    </update>
    
    <update id="setWithdraw">
        update users set withdraw = withdraw - #{withdraw} where userid = #{userid}
    </update>
    
    <delete id="deleteUser">
        delete from users where userid = #{userid}
    </delete>
    
    <select id="AllMembers">
        select * from users order by userid
    </select>
    
    <update id="setGrade">
        update users set grade = #{grade} where userid = #{userid}
    </update>

	<select id="findAllUserNicknames" resultType="map">
        SELECT userid, nickname FROM users
    </select>

</mapper>





